{"version":3,"file":"static/css/main.08344671.css","mappings":"AAAA,4EAEE,2BAGF,0DACE,6BCNF,0BACE,2BAGF,0CACE,2BCLF,6BACE,oCAGF,0BACE,4CAGF,+BACE,mCCTF,6DACE,qCACA,uBAGF,kCACE,qCAGF,uEACE,0BAGF,+DACE,gBAGF,mCACE,iCAGF,mCAEE,iCADA,eACA,CAGF,mCACE,iCAGF,mCACE,iCAGF,mCACE,iCAGF,mCAEE,yBADA,eACA,CAGF,0DACE,gBAGF,kCACE,cACA,0BAGF,mCACE,wBAIF,mCACE,qBAGF,8CACE,oCAGF,mCACE,2BAIF,qCACE,kCAGF,+CAEE,qCAGA,oCAFA,4BACA,8BACA,CAGF,2CACE;ACnFF;;CAAA,0lKACA,uzLCCA,iBAGE,sBACA,SACA,UAIF,4BAEE,gBAIF,kBACE,uBAIF,KAEE,gBADA,gBACA,CAIF,YAGE,cADA,cACA,CAIF,6BAIE,aAIF,OACE,eAIF,sCACE,kBACE,qBAGF,iBAGE,8EACA,oFAEA,+BADA,mCACA,ECzDJ,MCwBM,8SCZN,KACE,mCAAoC,CACpC,qCAAsC,CAEtC,qCAAsC,CACtC,2CAA4C,CAC5C,6CAA8C,CAC9C,oCAAqC,CACrC,iCAAkC,CAClC,mCAAoC,CAEpC,oCAAqC,CACrC,sCAAuC,CAGvC,kBAGF,aACE,oCAAqC,CACrC,2CAA4C,CAC5C,6CAA8C,CAC9C,oCAAqC,CACrC,iCAAkC,CAClC,mCAAoC,CACpC,oCAAqC,CACrC,sCAAuC,CAGzC,IACE,aJ5CF,8C,CKAA,4BLAA,wE,CKAA,4BLAA,uE,CKAA,8BLAA,Y,CKAA,4BLAA,yBKAA,uELAA,aKAA,yDLAA,yBKAA,gELAA,uB,CKAA,4BLAA,wE,CKAA,4BLAA,uE,CKAA,2BLAA,gD,CKAA,4BLAA,yBKAA,qELAA,yBKAA,yELAA,sEKAA,+D,CAAA,0BLAA,wH,CAAA,wB,CAAA,sB,CAAA,wB,CAAA,qB,CAAA,mC,CAAA,oC,CAAA,0C","sources":["styles/components/Header/IconDelete.module.scss","styles/components/Header/IconSave.module.scss","styles/components/_workspace.module.scss","styles/components/Workspace/_preview.module.scss","styles/vendors/_tailwind.scss","styles/base/_reset.scss","styles/base/_root.scss","styles/abstracts/_color.scss","styles/base/_base.scss","../<no source>"],"sourcesContent":[".iconDelete,\nbutton:disabled .iconDelete {\n  fill: var(--color-gray-500);\n}\n\nbutton:where(:hover, :focus) .iconDelete {\n  fill: var(--color-orange-400);\n}\n",".iconSave {\n  fill: var(--color-gray-100);\n}\n\nbutton:disabled .iconSave {\n  fill: var(--color-gray-400);\n}\n",".splitter {\n  background-color: var(--bg-splitter);\n}\n\n.header {\n  background-color: var(--bg-workspace-header);\n}\n\n.headingText {\n  color: var(--text-workspace-header);\n}\n\n.workspace {\n  background-color: var(--bg-workspace);\n  color: var(--text-body);\n}\n",".previewContent {\n  background-color: var(--bg-workspace);\n  color: var(--text-body);\n}\n\n.previewContent > * {\n  margin-bottom: calc(20 / var(--to-rem));\n}\n\n.previewContent :where(h1, h2, h3, h4, h5, blockquote, code) {\n  color: var(--text-primary);\n}\n\n.previewContent :where(h1, h3, h4, h5, blockquote) {\n  font-weight: 700;\n}\n\n.previewContent h1 {\n  font-size: calc(32 / var(--to-rem));\n}\n\n.previewContent h2 {\n  font-weight: 300;\n  font-size: calc(28 / var(--to-rem));\n}\n\n.previewContent h3 {\n  font-size: calc(24 / var(--to-rem));\n}\n\n.previewContent h4 {\n  font-size: calc(20 / var(--to-rem));\n}\n\n.previewContent h5 {\n  font-size: calc(16 / var(--to-rem));\n}\n\n.previewContent h6 {\n  font-weight: 700;\n  color: var(--text-accent);\n}\n\n.previewContent :where(h1, h2, h3, h4, h5, h6) {\n  line-height: 1.3;\n}\n\n.previewContent a {\n  color: inherit;\n  text-decoration: underline;\n}\n\n.previewContent ol {\n  list-style-type: decimal;\n}\n\n// todo: colored discs\n.previewContent ul {\n  list-style-type: disc;\n}\n\n.previewContent :where(ol, ul) {\n  padding-left: calc(24 / var(--to-rem));\n}\n\n.previewContent li {\n  list-style-position: inside;\n}\n\n// todo: overflow wrap\n.previewContent code {\n  font-family: \"Roboto Mono\", monospace;\n}\n\n.previewContent blockquote,\npre {\n  background-color: var(--bg-codeblock);\n  color: var(--text-codeblock);\n  padding: calc(25 / var(--to-rem));\n  border-radius: calc(4 / var(--to-rem));\n}\n\n.previewContent blockquote {\n  border-left: 4px solid var(--color-orange-400);\n}\n","@tailwind base;\n@tailwind utilities;\n","/* Box sizing rules */\n/* Remove default margin & padding */\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n/* Remove list styles on ul, ol elements, which suggests default styling will be removed */\nul[role='list'],\nol[role='list'] {\n  list-style: none;\n}\n\n/* Set core root defaults */\nhtml:focus-within {\n  scroll-behavior: smooth;\n}\n\n/* Set core body defaults */\nbody {\n  min-height: 100vh;\n  line-height: 1.5;\n}\n\n/* Make images easier to work with */\nimg,\npicture {\n  max-width: 100%;\n  display: block;\n}\n\n/* Inherit fonts for inputs and buttons */\ninput,\nbutton,\ntextarea,\nselect {\n  font: inherit;\n}\n\n/* Set cursor for buttons */\nbutton {\n  cursor: pointer;\n}\n\n/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */\n@media (prefers-reduced-motion: reduce) {\n  html:focus-within {\n    scroll-behavior: auto;\n  }\n\n  *,\n  *::before,\n  *::after {\n    animation-duration: 0.01ms !important;\n    animation-iteration-count: 1 !important;\n    transition-duration: 0.01ms !important;\n    scroll-behavior: auto !important;\n  }\n}","@use \"styles/abstracts/color\";\n\n:root {\n  @include color.customProperties();\n}\n","$colors: (\n  \"orange\": (\n    \"400\": hsl(13 75% 58%),\n    \"300\": hsl(21 86% 67%),\n  ),\n  \"gray\": (\n    \"1000\": hsl(225 9% 9%),\n    \"900\": hsl(216 8% 12%),\n    \"800\": hsl(220 7% 18%),\n    \"700\": hsl(216 9% 23%),\n    \"600\": hsl(216 8% 38%),\n    \"500\": hsl(213 4% 51%),\n    \"400\": hsl(222 9% 78%),\n    \"300\": hsl(0 0% 89%),\n    \"200\": hsl(0 0% 96%),\n    \"100\": hsl(0 0% 100%),\n  ),\n);\n\n// Generate CSS custom properties\n@mixin customProperties() {\n  // for each color\n  @each $color, $shades in $colors {\n    /* color-#{$color} */\n    // for each shade\n    @each $shade, $shade-value in $shades {\n      --color-#{$color}-#{$shade}: #{$shade-value};\n    }\n  }\n}\n\n// Generate utility classes from all color shades\n@mixin utilities() {\n  // for each color\n  @each $color, $shades in $colors {\n    // for each shade\n    @each $shade, $shade-value in $shades {\n      // text color\n      /* text-#{$color} utilities */\n      .text-#{$color}-#{$shade} {\n        color: var(--color-#{$color}-#{$shade});\n      }\n\n      // background color\n      /* bg-#{$color} utilities */\n      .bg-#{$color}-#{$shade} {\n        background-color: var(--color-#{$color}-#{$shade});\n      }\n\n      // caret color\n      /* caret-#{$color} utilities */\n      .caret-#{$color}-#{$shade} {\n        caret-color: var(--color-#{$color}-#{$shade});\n      }\n\n      // fill color\n      /* fill-#{$color} utilities */\n      .fill-#{$color}-#{$shade} {\n        fill: var(--color-#{$color}-#{$shade});\n      }\n    }\n  }\n}\n","@layer base {\n  body {\n    --base-size: 16;\n    --to-rem: var(--base-size) * 1rem;\n\n    // core body defaults\n    background-color: var(--bg-workspace);\n    color: var(--text-primary);\n    font-family: var(--font-family-roboto, sans-serif);\n    font-weight: 400;\n    font-size: calc(14 / var(--to-rem));\n  }\n}\n\nbody {\n  --bg-accent: var(--color-orange-400);\n  --text-accent: var(--color-orange-400);\n\n  --bg-workspace: var(--color-gray-1000);\n  --bg-workspace-header: var(--color-gray-900);\n  --text-workspace-header: var(--color-gray-400);\n  --text-primary: var(--color-gray-100);\n  --text-body: var(--color-gray-400);\n  --bg-splitter: var(--color-gray-500);\n\n  --bg-codeblock: var(--color-gray-800);\n  --text-codeblock: var(--color-gray-100);\n\n  // for sidebar transform\n  overflow-x: hidden;\n}\n\n.theme-light {\n  --bg-workspace: var(--color-gray-100);\n  --bg-workspace-header: var(--color-gray-200);\n  --text-workspace-header: var(--color-gray-500);\n  --text-primary: var(--color-gray-700);\n  --text-body: var(--color-gray-500);\n  --bg-splitter: var(--color-gray-300);\n  --bg-codeblock: var(--color-gray-200);\n  --text-codeblock: var(--color-gray-700);\n}\n\nsvg {\n  outline: none;\n}\n"],"names":[],"sourceRoot":""}